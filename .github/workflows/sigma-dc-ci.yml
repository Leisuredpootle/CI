name: Sigma-DC-Dimming-CI

on:
  release: 
    types: [published]
  workflow_dispatch: 


jobs:
  build_kernel:

    name: Build Sigma DC Dimming Kernel For OnePlus5/T
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      
      - name: Space Cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -y install bc wget bison ca-certificates ccache clang cmake curl file flex gcc g++ git libelf-dev libssl-dev make ninja-build python3 texinfo u-boot-tools xz-utils zlib1g-dev zip
      
      - name: Prepare Environment
        run: |
          mkdir /opt/clang
          cd /opt/clang
          wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/e490075c81db3990363e491e3947d1e48a05e370/clang-r399163b.tar.gz
          tar -zxvf clang-r399163b.tar.gz
          rm -rf clang-r399163b.tar.gz

          cd /opt
          wget https://developer.arm.com/-/media/Files/downloads/gnu-a/9.2-2019.12/binrel/gcc-arm-9.2-2019.12-x86_64-arm-none-linux-gnueabihf.tar.xz -O gcc32.tar.xz
          tar -xvJf gcc32.tar.xz -C /opt
          rm -rf gcc32.tar.xz
          mv gcc-arm-9.2-2019.12-x86_64-arm-none-linux-gnueabihf gcc32

          wget https://developer.arm.com/-/media/Files/downloads/gnu-a/9.2-2019.12/binrel/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz -O gcc64.tar.xz
          tar -xvJf gcc64.tar.xz -C /opt
          rm -rf gcc64.tar.xz
          mv gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu gcc64

      - name: Clone Kernel Code
        run: |
          git clone --depth=1 https://github.com/crdroidandroid/android_kernel_oneplus_msm8998 /opt/android_kernel_oneplus_msm8998
          cd /opt/android_kernel_oneplus_msm8998
          wget https://github.com/kbj/crd-dc-kernel/raw/main/crd-dc.patch -O /opt/crd-dc.patch
          git apply /opt/crd-dc.patch
      
      - name: Compile Kernel
        run: |
          cd /opt/android_kernel_oneplus_msm8998
          export CROSS_COMPILE=/opt/gcc64/bin/aarch64-none-linux-gnu-
          export CROSS_COMPILE_ARM32=/opt/gcc32/bin/arm-none-linux-gnueabihf-
          export ARCH=arm64
          export SUBARCH=arm64
          make O=out lineage_oneplus5_defconfig
          make -j$(nproc --all) O=out ARCH=arm64 SUBARCH=arm64 CC=/opt/clang/bin/clang CROSS_COMPILE=/opt/gcc64/bin/aarch64-none-linux-gnu- CONFIG_DEBUG_SECTION_MISMATCH=y CLANG_TRIPLE=aarch64-none-linux-gnu-
      
      - name: AnyKernel Package
        run: |
          git clone --depth=1 https://github.com/osm0sis/AnyKernel3
          sed -i '42,60d' ./AnyKernel3/anykernel.sh
          sed -i 's/kernel.string=ExampleKernel by osm0sis @ xda-developers/kernel.string=Crdroid-OP5\/T Fliker Free kernel/g' ./AnyKernel3/anykernel.sh
          sed -i 's/device.name1=maguro/device.name1=cheeseburger/g' ./AnyKernel3/anykernel.sh
          sed -i 's/device.name2=toro/device.name2=dumpling/g' ./AnyKernel3/anykernel.sh
          sed -i 's/supported.versions=/supported.versions=10.0.0/g' ./AnyKernel3/anykernel.sh
          sed -i 's/block=\/dev\/block\/platform\/omap\/omap_hsmmc.0\/by-name\/boot;/block=\/dev\/block\/bootdevice\/by-name\/boot;/g' ./AnyKernel3/anykernel.sh
          sed -i '/device.name3=toroplus/'d ./AnyKernel3/anykernel.sh
          sed -i '/device.name4=tuna/'d ./AnyKernel3/anykernel.sh
          sed -i '/device.name5=/'d ./AnyKernel3/anykernel.sh

          cd AnyKernel3
          cp /opt/android_kernel_oneplus_msm8998/out/arch/arm64/boot/Image.gz-dtb ./

          t=$(date "+%Y%m%d")
          zip -r Crd-OP5-5T-flikerfree-dither-${t}.zip ./*
          mkdir output
          mv Crd-OP5-5T-flikerfree-dither-${t}.zip ./output/
      
      - name: Deliver KernelInfo
        uses: actions/upload-artifact@v2
        with:
          name: Kernel
          path: ./AnyKernel3/output
